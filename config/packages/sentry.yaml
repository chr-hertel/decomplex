when@prod:
    sentry:
        dsn: '%env(SENTRY_DSN)%'
        options:
          integrations:
            - 'Sentry\Integration\IgnoreErrorsIntegration'
        # this hooks into critical paths of the framework (and vendors) to perform
        # automatic instrumentation (there might be some performance penalty)
        # https://docs.sentry.io/platforms/php/guides/symfony/performance/instrumentation/automatic-instrumentation/
        tracing:
            enabled: false

#        If you are using Monolog, you also need this additional configuration to log the errors correctly:
#        https://docs.sentry.io/platforms/php/guides/symfony/#monolog-integration
#        register_error_listener: false
#        register_error_handler: false

#    monolog:
#        handlers:
#            sentry:
#                type: sentry
#                level: !php/const Monolog\Logger::ERROR
#                hub_id: Sentry\State\HubInterface

#    Uncomment these lines to register a log message processor that resolves PSR-3 placeholders
#    https://docs.sentry.io/platforms/php/guides/symfony/#monolog-integration
#    services:
#        Monolog\Processor\PsrLogMessageProcessor:
  #            tags: { name: monolog.processor, handler: sentry }

    services:
      Sentry\Integration\IgnoreErrorsIntegration:
        $options:
          ignore_exceptions:
            - 'Symfony\Component\HttpKernel\Exception\BadRequestHttpException'          # 400
            - 'Symfony\Component\HttpKernel\Exception\NotFoundHttpException'            # 404
            - 'Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException'    # 405
