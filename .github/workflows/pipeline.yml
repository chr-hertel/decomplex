name: pipeline
on: pull_request

jobs:
  pipeline:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: 'symfony'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'password'
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Cache Vendors
        uses: actions/cache@v2
        id: cache-vendors
        with:
          path: vendor
          key: ${{ runner.os }}-vendor-${{ hashFiles('**/composer.lock')}}

      - name: Composer Validation
        run: composer validate --strict

      - name: Install PHP Dependencies
        run: composer install --no-scripts

      - name: Lint Yaml Files
        run: bin/console lint:yaml config --parse-tags

      - name: Lint Templates
        run: bin/console lint:twig templates

      - name: Lint Container
        run: bin/console lint:container

      - name: Code Style PHP
        run: vendor/bin/php-cs-fixer fix --dry-run

      - name: Cache Node Modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json')}}

      - name: Install NPM Dependencies
        run: npm clean-install

      - name: Code Style CSS & JS
        run: npm run check-style

      - name: PHPStan
        run: vendor/bin/phpstan analyse

      - name: Psalm
        run: vendor/bin/psalm --show-info=true

      - name: Setup Database
        run: |
          echo 'DATABASE_URL="postgresql://postgres:password@localhost:5432/symfony?serverVersion=11.0"' > .env.test.local
          bin/console doctrine:database:create --env=test --no-interaction
          bin/console doctrine:schema:create --env=test --no-interaction

      - name: Frontend Build
        run: npm run build

      - name: Tests
        run: vendor/bin/phpunit
